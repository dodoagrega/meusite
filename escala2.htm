<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <title>Escala Semanal</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f4f4f4;
      padding: 20px;
    }
    .dia {
      margin-bottom: 30px;
    }
    h2 {
      background: #333;
      color: #fff;
      padding: 10px;
      border-radius: 5px;
    }
    .carro {
      background: #fff;
      border: 1px solid #ccc;
      border-radius: 8px;
      padding: 10px;
      margin-top: 10px;
      display: inline-block;
      vertical-align: top;
      width: 200px;
      margin-right: 10px;
    }
    .carro h3 {
      margin-top: 0;
      background: #ddd;
      padding: 5px;
      border-radius: 5px;
      text-align: center;
    }
    .pessoa {
      padding: 5px 0;
      border-bottom: 1px solid #eee;
    }
  </style>
</head>
<body>

<div id="escala"></div>

<script>
const equipes = {
  1: ["Felipe", "Marcus Vinicius", "Elizeu"],
  2: ["L. Ferreira", "Willians", "Fernando"],
  3: ["Hércules", "Sérgio", "Cal"],
  4: ["Ives", "Dodô"],
  5: ["L. Prado", "Tiago"]
};

const equipe6Semana = {
  segunda: "Régis",
  terca: "Tiago",
  quarta: "L. Ferreira",
  quinta: "Dodô",
  sexta: "L. Prado"
};

const dias = ["segunda", "terca", "quarta", "quinta", "sexta"];
const operacoes = ["F", "B", "P"];

function rotaciona(lista) {
  return [...lista.slice(1), lista[0]];
}

function proximaOperacao(op) {
  const idx = operacoes.indexOf(op);
  return operacoes[(idx + 1) % operacoes.length];
}

function geraEscala() {
  let carros = [1, 2, 3];
  let operacoesAtual = {
    "Felipe": "F", "Marcus Vinicius": "P", "Elizeu": "B",
    "L. Ferreira": "F", "Willians": "P", "Fernando": "B",
    "Hércules": "F", "Sérgio": "P", "Cal": "B",
    "Ives": "F", "Dodô": "P",
    "L. Prado": "F", "Tiago": "P"
  };

  let equipe6DiaAnterior = null;
  const escala = {};

  dias.forEach((dia, i) => {
    escala[dia] = {};
    let e1 = equipes[1].map(nome => ({ nome, op: operacoesAtual[nome] }));
    let e2 = equipes[2].map(nome => ({ nome, op: operacoesAtual[nome] }));
    let e3 = equipes[3].map(nome => ({ nome, op: operacoesAtual[nome] }));

    escala[dia]["Carro " + carros[0]] = e1;
    escala[dia]["Carro " + carros[1]] = e2;
    escala[dia]["Carro " + carros[2]] = e3;

    escala[dia]["Carro 4"] = equipes[4].map(nome => ({ nome, op: operacoesAtual[nome] }));
    escala[dia]["Carro 5"] = equipes[5].map(nome => ({ nome, op: operacoesAtual[nome] }));

    escala[dia]["Morto/Refino"] = equipe6Semana[dia];

    if (i > 0) {
      let substituido = equipe6Semana[dia];
      let substituto = equipe6DiaAnterior;

      for (let carro in escala[dia]) {
        let pos = escala[dia][carro].find(p => p.nome === substituido);
        if (pos) {
          pos.nome = substituto;
          operacoesAtual[substituto] = pos.op;
          break;
        }
      }
      delete operacoesAtual[substituido];
      operacoesAtual[substituido] = "M";
    }

    equipe6DiaAnterior = equipe6Semana[dia];

    Object.keys(operacoesAtual).forEach(nome => {
      if (operacoesAtual[nome] !== "M") {
        operacoesAtual[nome] = proximaOperacao(operacoesAtual[nome]);
      }
    });

    carros = rotaciona(carros);
  });

  return escala;
}

function renderEscala() {
  const escala = geraEscala();
  const container = document.getElementById("escala");

  for (let dia in escala) {
    const diaDiv = document.createElement("div");
    diaDiv.className = "dia";
    diaDiv.innerHTML = `<h2>${dia.toUpperCase()}</h2>`;

    for (let carro in escala[dia]) {
      const card = document.createElement("div");
      card.className = "carro";
      card.innerHTML = `<h3>${carro}</h3>`;

      if (carro === "Morto/Refino") {
        card.innerHTML += `<div class="pessoa">${escala[dia][carro]}</div>`;
      } else {
        escala[dia][carro].forEach(p => {
          card.innerHTML += `<div class="pessoa"><strong>${p.op}</strong>: ${p.nome}</div>`;
        });
      }

      diaDiv.appendChild(card);
    }

    container.appendChild(diaDiv);
  }
}

renderEscala();
</script>

</body>
</html>